<% if @poll_popular.present? %>
  <% if @poll_popular.vote_all > 0 %>


    <div id="chart_div_popular" align="center"></div>
    <!-- <div id="chart_poll_popular" style="height: 300px"></div> -->

    <!-- <div class="poll_header">
      Poll: <%= @poll_popular.title %>
    </div> -->

    <% if @poll_popular.have_photo? %>
      <br>
      <img src="<%= @poll_popular.photo_poll.url(:thumbnail) %>" class="img-responsive center-block">
    <% end %>

    <br>

    <div class="panel-padding">
      <ul class="list-group">
      <% @poll_popular_data = [ ] %>
      <% @choice_poll_popular = @poll_popular.cached_choices.collect{|e| [e.answer, e.vote] } %>
      <% @choice_poll_popular_max = @choice_poll_popular.collect{|e| e.last }.max %>

      <% @choice_poll_popular.each do |choice| %>
        <% @poll_popular_data << { name: choice.first, value: choice.last } %>
      <% end %>

        <% @poll_popular.cached_choices.each do |choice| %>
        <li class="list-group-item">
          <span class="badge badge-primary <%= is_max_badge(choice.vote, @choice_poll_popular_max) %>"><%= choice.vote %></span>
          <%= @poll_popular.rating? ? show_star_answer(choice.answer).html_safe : choice.answer %>
        </li>
        <% end %>
      </ul>
    </div>


    <%= content_tag :div, "", id: 'choice_poll_popular', data: { polls: @choice_poll_popular } %>

    <script type="text/javascript">

      // Load the Visualization API and the piechart package.
      google.load('visualization', '1.0', {'packages':['corechart']});

      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawPieChartPopular);

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawPieChartPopular() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        var chart_data = $('#choice_poll_popular').data('polls');
        data.addColumn('string', 'Answer');
        data.addColumn('number', 'Vote');

        data.addRows(chart_data);

        // Set chart options
        var options = {
          'title'  : '<%= @poll_popular.title %>',
          'height' : 300,
          'is3D': true
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_popular'));
        chart.draw(data, options);
      }

      $.ajax({
        complete: function(){
          drawPieChartPopular();
        }
     });
    </script>

    <script type="text/javascript">
      var vote_all = <%= @poll_popular.vote_all %>;
      if (vote_all <= 0) {
        $('#chart_div_popular').hide();
      };   
    </script>

  <% end %>
<% else %>
  <div class='alert alert-info'>No vote result.</div>
<% end %>

<!--<script type="text/javascript">
// configure for module loader
require.config({
    paths: {
        echarts: '/echarts'
    }
});

// use
require(
    [
        'echarts',
        'echarts/chart/pie'
    ],
    function(ec) {
        // Initialize after dom ready
        var myChart = ec.init(document.getElementById('chart_poll_popular'), "macarons");

        option = {
            title : {
                text: "<%= @poll_popular.truncate_title %>",
                subtext: "<%= @poll_popular.member.fullname %>",
                x:'center'
            },
            tooltip : {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {
                orient : 'vertical',
                x : 'left',
                data: <%= raw @choice_poll_popular.collect{|e| e.first } %>
            },
            calculable : true,
            series : [
                {
                    name:'Result',
                    type:'pie',
                    radius : '55%',
                    center: ['50%', '60%'],
                    data: <%= raw @poll_popular_data.to_json %>
                }
            ]
        };

        // Load data into the ECharts instance 
        myChart.setOption(option);
    }
);
</script>-->
