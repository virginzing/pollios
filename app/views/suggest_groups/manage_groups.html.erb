<div class="well">

<h1>Select suggest groups</h1>

  <%= form_tag suggest_groups_path, method: :post do %>
    <select multiple="multiple" class="searchable" name="group_select[]">
      <% @group.each do |group| %>
        <option value="<%= group.id %>" class="tooltip_group" data-value-hidden="<%= group.id %>"><%= group.name %></option>
      <% end %>
    </select>
  
    <br>
    <%= submit_tag "UPDATE", class: 'btn btn-primary', data: { disable_with: "Please wait..."} %>
  <% end %>

</div>


<script>
var group_suggest = <%= raw @current_suggest_group %>;

$.each(group_suggest, function (index, value) {
  $("select option[value=" + value + "]").attr('selected','selected');
})

$('.searchable').multiSelect({
  selectableHeader: "<input type='text' class='form-control search-input suggest-group-searchable' placeholder='search'>",
  selectionHeader: "<input type='text' class='form-control search-input suggest-group-searchable' placeholder='search'>",
  afterInit: function(ms){
    var that = this,
        $selectableSearch = that.$selectableUl.prev(),
        $selectionSearch = that.$selectionUl.prev(),
        selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
        selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
    .on('keydown', function(e){
      if (e.which === 40){
        that.$selectableUl.focus();
        return false;
      }
    });

    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
    .on('keydown', function(e){
      if (e.which == 40){
        that.$selectionUl.focus();
        return false;
      }
    });
  },
  afterSelect: function(){
    this.qs1.cache();
    this.qs2.cache();
  },
  afterDeselect: function(){
    this.qs1.cache();
    this.qs2.cache();
  }
});

</script>


<script>
  $(document).ready(function() {
      $('.tooltip_group').tooltipster({
          contentAsHTML: true,
          interactive: true,
          content: 'Loading...',
          functionBefore: function(origin, continueTooltip) {

              // we'll make this function asynchronous and allow the tooltip to go ahead and show the loading notification while fetching our data
              continueTooltip();
              // next, we want to check if our data has already been cached
              if (origin.data('ajax') !== 'cached') {
                  $.ajax({
                      type: 'GET',
                      url: '/load_group',
                      data: {
                        group_id: origin.attr('data-value-hidden')
                      },
                      success: function(data) {
                          // update our tooltip content with our returned data and cache it
                          origin.tooltipster('content', data).data('ajax', 'cached');
                      }
                  });
              }
          }
      });
  });
</script>



<style>
input.suggest-group-searchable {
  margin-bottom: 10px;
}
.ms-container {
  width: auto;
}
</style>